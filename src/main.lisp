(in-package asdf/user)
(defpackage #.$$ (:use :cl :linedit)
  (:import-from sb-sys #:interactive-interrupt))
(in-package #.$$)
(setf linedit::*history* "~/history")
(set-macro-character #\&
 #'(lambda(stream char)
     (declare (ignore char))
     (list (quote import) (read stream t nil t))))
(defun eval-string(string)
  (loop :initially (format t " ;;")
     :with stream = (make-string-input-stream string)
     :do (handler-case (format t " ~A" (eval (read stream)))
           (end-of-file() (terpri) (loop-finish))
           (error(e)      (format t "~% ;; *ERR* ~A~%" e)))))
(defun get-string()
  (handler-case (print (linedit:linedit :prompt ">>"))
    (interactive-interrupt() (format t "*BRK*"))
    (end-of-file()           (format t "*EOF*~%"))))
(export
 (defvar *version* "0.1.5"))
(export
 (defun irepl(linedit::*history*)
   (format t " ;; ~a v~a~%" asdf/user::$$ *version*)
   (loop :as string = (get-string)
      :while string :do (eval-string string))))
(in-package :linedit)
;; super-hacky, but better than putting empty lines in the history.
(defun get-finished-string (editor)
  (if (plusp (length (get-string editor)))
      (buffer-push (get-string editor) (editor-history editor)))
  (newline editor)
  (get-string editor))
